// This is an autogenerated file from Firebase Studio.
"use client";

import Image from 'next/image';
import { Card, CardContent, CardFooter } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Checkbox } from '@/components/ui/checkbox';
import { ChevronDown, ChevronUp } from 'lucide-react';
import type { Product } from '@/lib/types';
import { cn } from '@/lib/utils';

interface ProductCarouselCardProps {
  product: Product;
  isExpanded: boolean;
  onToggleExpand: () => void;
  isSelectedForCompare: boolean;
  onToggleCompare: () => void;
  isAnotherExpanded: boolean;
}

export default function ProductCarouselCard({ 
  product, 
  isExpanded, 
  onToggleExpand,
  isSelectedForCompare,
  onToggleCompare,
  isAnotherExpanded,
}: ProductCarouselCardProps) {
  const imageUrl = product.imageUrl || 'https://placehold.co/300x200.png';

  const handleCheckboxClick = (e: React.MouseEvent) => {
    e.stopPropagation(); // Prevent card click when interacting with checkbox
    onToggleCompare();
  };

  return (
    <Card className={cn("overflow-hidden transition-all duration-300 w-full flex flex-col h-full", { "border-primary": isExpanded })}>
       {!isAnotherExpanded && (
        <div className="relative">
          <Image
            src={imageUrl}
            alt={product.name}
            width={300}
            height={200}
            className="w-full h-24 object-cover"
            data-ai-hint="furniture product"
          />
           <div className="absolute top-1 left-1" onClick={handleCheckboxClick}>
            <Checkbox
              checked={isSelectedForCompare}
              className="bg-white/80 border-gray-400"
            />
          </div>
        </div>
      )}
      <CardContent className="p-2 flex-grow">
        <p className={cn("text-sm font-medium", { "line-clamp-2": !isAnotherExpanded, "truncate": isAnotherExpanded })}>
          {product.name}
        </p>
      </CardContent>
      <CardFooter className="p-2 pt-0 flex justify-between items-center">
        <p className="text-md font-semibold text-primary">${product.price.toFixed(2)}</p>
        <Button variant="ghost" size="icon" onClick={onToggleExpand} className="h-6 w-6">
          {isExpanded ? <ChevronUp className="h-4 w-4" /> : <ChevronDown className="h-4 w-4" />}
          <span className="sr-only">Toggle Details</span>
        </Button>
      </CardFooter>
    </Card>
  );
}
